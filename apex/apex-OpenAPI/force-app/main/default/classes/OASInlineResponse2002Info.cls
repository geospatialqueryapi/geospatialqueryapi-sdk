/*
 * Geo Spatial Query Api - US Census Boundaries and Census Data
 * Geospatial Query API: US Census Boundaries and Census Data /doc.html
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mobiledatabooks@mobiledatabooks.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASInlineResponse2002Info
 */
public class OASInlineResponse2002Info implements OAS.MappedProperties {
    /**
     * Get geographicLevel
     * @return geographicLevel
     */
    public String geographicLevel { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get count
     * @return count
     */
    public Double count { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'geographic_level' => 'geographicLevel'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASInlineResponse2002Info getExample() {
        OASInlineResponse2002Info inlineResponse2002Info = new OASInlineResponse2002Info();
          inlineResponse2002Info.geographicLevel = '';
          inlineResponse2002Info.description = '';
          inlineResponse2002Info.count = 1.3579;
        return inlineResponse2002Info;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASInlineResponse2002Info) {           
            OASInlineResponse2002Info inlineResponse2002Info = (OASInlineResponse2002Info) obj;
            return this.geographicLevel == inlineResponse2002Info.geographicLevel
                && this.description == inlineResponse2002Info.description
                && this.count == inlineResponse2002Info.count;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (geographicLevel == null ? 0 : System.hashCode(geographicLevel));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (count == null ? 0 : System.hashCode(count));
        return hashCode;
    }
}

