/*
 * Geo Spatial Query Api - US Census Boundaries and Census Data
 * Easily integrate geospatial point-in-polygon search, census boundaries, location-based data, geofencing, and other location-based features into web and mobile apps.\nOur Software Development Kit (SDK) is available on GitHub at https://github.com/geospatialqueryapi/geospatialqueryapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones. PDF documentation - ./pdf.html
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mobiledatabooks@mobiledatabooks.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASFeatureGeoJSONProperties
 */
public class OASFeatureGeoJSONProperties {
    /**
     * Get ALAND
     * @return ALAND
     */
    public String ALAND { get; set; }

    /**
     * Get AWATER
     * @return AWATER
     */
    public String AWATER { get; set; }

    /**
     * Get GEOID
     * @return GEOID
     */
    public String GEOID { get; set; }

    /**
     * Get INTPTLAT
     * @return INTPTLAT
     */
    public String INTPTLAT { get; set; }

    /**
     * Get INTPTLON
     * @return INTPTLON
     */
    public String INTPTLON { get; set; }

    /**
     * Get acs5Profiles
     * @return acs5Profiles
     */
    public OASAcs5Profiles acs5Profiles { get; set; }

    /**
     * Get info
     * @return info
     */
    public OASInfo info { get; set; }

    public static OASFeatureGeoJSONProperties getExample() {
        OASFeatureGeoJSONProperties featureGeoJSONProperties = new OASFeatureGeoJSONProperties();
          featureGeoJSONProperties.ALAND = '131175460655';
          featureGeoJSONProperties.AWATER = '4591915034';
          featureGeoJSONProperties.GEOID = '01';
          featureGeoJSONProperties.INTPTLAT = '+32.7396323';
          featureGeoJSONProperties.INTPTLON = '-086.8434593';
          featureGeoJSONProperties.acs5Profiles = OASAcs5Profiles.getExample();
          featureGeoJSONProperties.info = OASInfo.getExample();
        return featureGeoJSONProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeatureGeoJSONProperties) {           
            OASFeatureGeoJSONProperties featureGeoJSONProperties = (OASFeatureGeoJSONProperties) obj;
            return this.ALAND == featureGeoJSONProperties.ALAND
                && this.AWATER == featureGeoJSONProperties.AWATER
                && this.GEOID == featureGeoJSONProperties.GEOID
                && this.INTPTLAT == featureGeoJSONProperties.INTPTLAT
                && this.INTPTLON == featureGeoJSONProperties.INTPTLON
                && this.acs5Profiles == featureGeoJSONProperties.acs5Profiles
                && this.info == featureGeoJSONProperties.info;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ALAND == null ? 0 : System.hashCode(ALAND));
        hashCode = (17 * hashCode) + (AWATER == null ? 0 : System.hashCode(AWATER));
        hashCode = (17 * hashCode) + (GEOID == null ? 0 : System.hashCode(GEOID));
        hashCode = (17 * hashCode) + (INTPTLAT == null ? 0 : System.hashCode(INTPTLAT));
        hashCode = (17 * hashCode) + (INTPTLON == null ? 0 : System.hashCode(INTPTLON));
        hashCode = (17 * hashCode) + (acs5Profiles == null ? 0 : System.hashCode(acs5Profiles));
        hashCode = (17 * hashCode) + (info == null ? 0 : System.hashCode(info));
        return hashCode;
    }
}

