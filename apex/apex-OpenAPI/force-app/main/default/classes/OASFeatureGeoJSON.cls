/*
 * Geo Spatial Query Api - US Census Boundaries and Census Data
 * Easily integrate geospatial point-in-polygon search, census boundaries, location-based data, geofencing, and other location-based features into web and mobile apps.\nOur Software Development Kit (SDK) is available on GitHub at https://github.com/geospatialqueryapi/geospatialqueryapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones. PDF documentation - ./pdf.html
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mobiledatabooks@mobiledatabooks.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASFeatureGeoJSON
 */
public class OASFeatureGeoJSON {
    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        FEATURE
    }

    /**
     * Get type
     * @return type
     */
    public TypeEnum type { get; set; }

    /**
     * Get geometry
     * @return geometry
     */
    public OASMultipolygonGeoJSON geometry { get; set; }

    /**
     * Get properties
     * @return properties
     */
    public OASFeatureGeoJSONProperties properties { get; set; }

    public static OASFeatureGeoJSON getExample() {
        OASFeatureGeoJSON featureGeoJSON = new OASFeatureGeoJSON();
          featureGeoJSON.type = TypeEnum.FEATURE;
          featureGeoJSON.geometry = OASMultipolygonGeoJSON.getExample();
          featureGeoJSON.properties = OASFeatureGeoJSONProperties.getExample();
        return featureGeoJSON;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeatureGeoJSON) {           
            OASFeatureGeoJSON featureGeoJSON = (OASFeatureGeoJSON) obj;
            return this.type == featureGeoJSON.type
                && this.geometry == featureGeoJSON.geometry
                && this.properties == featureGeoJSON.properties;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (geometry == null ? 0 : System.hashCode(geometry));
        hashCode = (17 * hashCode) + (properties == null ? 0 : System.hashCode(properties));
        return hashCode;
    }
}

