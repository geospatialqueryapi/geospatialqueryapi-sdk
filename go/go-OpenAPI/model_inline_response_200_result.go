/*
 * Geo Spatial Query Api - US Census Boundaries and Census Data
 *
 * Easily integrate geospatial point-in-polygon search, census boundaries, location-based data, geofencing, and other location-based features into web and mobile apps. Our Software Development Kit (SDK) is available on GitHub at https://github.com/geospatialqueryapi/geospatialqueryapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones. PDF documentation - ./pdf.html
 *
 * API version: 1.0.0
 * Contact: mobiledatabooks@mobiledatabooks.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200Result struct for InlineResponse200Result
type InlineResponse200Result struct {
	Status string `json:"status"`
	Error string `json:"error"`
	ErrorDescription string `json:"error_description"`
	AdditionalProperties map[string]interface{}
}

type _InlineResponse200Result InlineResponse200Result

// NewInlineResponse200Result instantiates a new InlineResponse200Result object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200Result(status string, error_ string, errorDescription string) *InlineResponse200Result {
	this := InlineResponse200Result{}
	this.Status = status
	this.Error = error_
	this.ErrorDescription = errorDescription
	return &this
}

// NewInlineResponse200ResultWithDefaults instantiates a new InlineResponse200Result object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultWithDefaults() *InlineResponse200Result {
	this := InlineResponse200Result{}
	return &this
}

// GetStatus returns the Status field value
func (o *InlineResponse200Result) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse200Result) SetStatus(v string) {
	o.Status = v
}

// GetError returns the Error field value
func (o *InlineResponse200Result) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetErrorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *InlineResponse200Result) SetError(v string) {
	o.Error = v
}

// GetErrorDescription returns the ErrorDescription field value
func (o *InlineResponse200Result) GetErrorDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetErrorDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ErrorDescription, true
}

// SetErrorDescription sets field value
func (o *InlineResponse200Result) SetErrorDescription(v string) {
	o.ErrorDescription = v
}

func (o InlineResponse200Result) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["error"] = o.Error
	}
	if true {
		toSerialize["error_description"] = o.ErrorDescription
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *InlineResponse200Result) UnmarshalJSON(bytes []byte) (err error) {
	varInlineResponse200Result := _InlineResponse200Result{}

	if err = json.Unmarshal(bytes, &varInlineResponse200Result); err == nil {
		*o = InlineResponse200Result(varInlineResponse200Result)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "error")
		delete(additionalProperties, "error_description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInlineResponse200Result struct {
	value *InlineResponse200Result
	isSet bool
}

func (v NullableInlineResponse200Result) Get() *InlineResponse200Result {
	return v.value
}

func (v *NullableInlineResponse200Result) Set(val *InlineResponse200Result) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200Result) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200Result) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200Result(val *InlineResponse200Result) *NullableInlineResponse200Result {
	return &NullableInlineResponse200Result{value: val, isSet: true}
}

func (v NullableInlineResponse200Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200Result) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


