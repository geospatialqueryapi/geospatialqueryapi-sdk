//
// Acs5ProfilesValuesDP0208.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Acs5ProfilesValuesDP0208: Codable, Hashable {

    public var mDBGroupName: String
    public var mDBGroupCode: String
    public var dP020069E: Acs5ProfilesValuesDP0208DP020069E
    public var dP020069PE: Acs5ProfilesValuesDP0208DP020069PE
    public var dP020070E: Acs5ProfilesValuesDP0208DP020070E
    public var dP020070PE: Acs5ProfilesValuesDP0208DP020070PE

    public init(mDBGroupName: String, mDBGroupCode: String, dP020069E: Acs5ProfilesValuesDP0208DP020069E, dP020069PE: Acs5ProfilesValuesDP0208DP020069PE, dP020070E: Acs5ProfilesValuesDP0208DP020070E, dP020070PE: Acs5ProfilesValuesDP0208DP020070PE) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP020069E = dP020069E
        self.dP020069PE = dP020069PE
        self.dP020070E = dP020070E
        self.dP020070PE = dP020070PE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP020069E = "DP020069E"
        case dP020069PE = "DP020069PE"
        case dP020070E = "DP020070E"
        case dP020070PE = "DP020070PE"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP020069E, forKey: .dP020069E)
        try container.encode(dP020069PE, forKey: .dP020069PE)
        try container.encode(dP020070E, forKey: .dP020070E)
        try container.encode(dP020070PE, forKey: .dP020070PE)
    }
}

