//
// Acs5ProfilesValuesDP0303.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Acs5ProfilesValuesDP0303: Codable, Hashable {

    public var mDBGroupName: String
    public var mDBGroupCode: String
    public var dP030026E: Acs5ProfilesValuesDP0303DP030026E
    public var dP030026PE: Acs5ProfilesValuesDP0303DP030026PE
    public var dP030027E: Acs5ProfilesValuesDP0303DP030027E
    public var dP030027PE: Acs5ProfilesValuesDP0303DP030027PE
    public var dP030028E: Acs5ProfilesValuesDP0303DP030028E
    public var dP030028PE: Acs5ProfilesValuesDP0303DP030028PE
    public var dP030029E: Acs5ProfilesValuesDP0303DP030029E
    public var dP030029PE: Acs5ProfilesValuesDP0303DP030029PE
    public var dP030030E: Acs5ProfilesValuesDP0303DP030030E
    public var dP030030PE: Acs5ProfilesValuesDP0303DP030030PE
    public var dP030031E: Acs5ProfilesValuesDP0303DP030031E
    public var dP030031PE: Acs5ProfilesValuesDP0303DP030031PE

    public init(mDBGroupName: String, mDBGroupCode: String, dP030026E: Acs5ProfilesValuesDP0303DP030026E, dP030026PE: Acs5ProfilesValuesDP0303DP030026PE, dP030027E: Acs5ProfilesValuesDP0303DP030027E, dP030027PE: Acs5ProfilesValuesDP0303DP030027PE, dP030028E: Acs5ProfilesValuesDP0303DP030028E, dP030028PE: Acs5ProfilesValuesDP0303DP030028PE, dP030029E: Acs5ProfilesValuesDP0303DP030029E, dP030029PE: Acs5ProfilesValuesDP0303DP030029PE, dP030030E: Acs5ProfilesValuesDP0303DP030030E, dP030030PE: Acs5ProfilesValuesDP0303DP030030PE, dP030031E: Acs5ProfilesValuesDP0303DP030031E, dP030031PE: Acs5ProfilesValuesDP0303DP030031PE) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP030026E = dP030026E
        self.dP030026PE = dP030026PE
        self.dP030027E = dP030027E
        self.dP030027PE = dP030027PE
        self.dP030028E = dP030028E
        self.dP030028PE = dP030028PE
        self.dP030029E = dP030029E
        self.dP030029PE = dP030029PE
        self.dP030030E = dP030030E
        self.dP030030PE = dP030030PE
        self.dP030031E = dP030031E
        self.dP030031PE = dP030031PE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP030026E = "DP030026E"
        case dP030026PE = "DP030026PE"
        case dP030027E = "DP030027E"
        case dP030027PE = "DP030027PE"
        case dP030028E = "DP030028E"
        case dP030028PE = "DP030028PE"
        case dP030029E = "DP030029E"
        case dP030029PE = "DP030029PE"
        case dP030030E = "DP030030E"
        case dP030030PE = "DP030030PE"
        case dP030031E = "DP030031E"
        case dP030031PE = "DP030031PE"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP030026E, forKey: .dP030026E)
        try container.encode(dP030026PE, forKey: .dP030026PE)
        try container.encode(dP030027E, forKey: .dP030027E)
        try container.encode(dP030027PE, forKey: .dP030027PE)
        try container.encode(dP030028E, forKey: .dP030028E)
        try container.encode(dP030028PE, forKey: .dP030028PE)
        try container.encode(dP030029E, forKey: .dP030029E)
        try container.encode(dP030029PE, forKey: .dP030029PE)
        try container.encode(dP030030E, forKey: .dP030030E)
        try container.encode(dP030030PE, forKey: .dP030030PE)
        try container.encode(dP030031E, forKey: .dP030031E)
        try container.encode(dP030031PE, forKey: .dP030031PE)
    }
}

