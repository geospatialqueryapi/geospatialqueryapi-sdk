//
// Acs5ProfilesValuesDP0201.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Acs5ProfilesValuesDP0201: Codable, Hashable {

    public var mDBGroupName: String
    public var mDBGroupCode: String
    public var dP020001E: Acs5ProfilesValuesDP0201DP020001E
    public var dP020002E: Acs5ProfilesValuesDP0201DP020002E
    public var dP020002PE: Acs5ProfilesValuesDP0201DP020002PE
    public var dP020003E: Acs5ProfilesValuesDP0201DP020003E
    public var dP020003PE: Acs5ProfilesValuesDP0201DP020003PE
    public var dP020006E: Acs5ProfilesValuesDP0201DP020006E
    public var dP020006PE: Acs5ProfilesValuesDP0201DP020006PE
    public var dP020007E: Acs5ProfilesValuesDP0201DP020007E
    public var dP020007PE: Acs5ProfilesValuesDP0201DP020007PE
    public var dP020008E: Acs5ProfilesValuesDP0201DP020008E
    public var dP020008PE: Acs5ProfilesValuesDP0201DP020008PE
    public var dP020009E: Acs5ProfilesValuesDP0201DP020009E
    public var dP020009PE: Acs5ProfilesValuesDP0201DP020009PE
    public var dP020010E: Acs5ProfilesValuesDP0201DP020010E
    public var dP020010PE: Acs5ProfilesValuesDP0201DP020010PE
    public var dP020011E: Acs5ProfilesValuesDP0201DP020011E
    public var dP020011PE: Acs5ProfilesValuesDP0201DP020011PE
    public var dP020014E: Acs5ProfilesValuesDP0201DP020014E
    public var dP020014PE: Acs5ProfilesValuesDP0201DP020014PE
    public var dP020015E: Acs5ProfilesValuesDP0201DP020015E
    public var dP020015PE: Acs5ProfilesValuesDP0201DP020015PE
    public var dP020016E: Acs5ProfilesValuesDP0201DP020016E
    public var dP020017E: Acs5ProfilesValuesDP0201DP020017E

    public init(mDBGroupName: String, mDBGroupCode: String, dP020001E: Acs5ProfilesValuesDP0201DP020001E, dP020002E: Acs5ProfilesValuesDP0201DP020002E, dP020002PE: Acs5ProfilesValuesDP0201DP020002PE, dP020003E: Acs5ProfilesValuesDP0201DP020003E, dP020003PE: Acs5ProfilesValuesDP0201DP020003PE, dP020006E: Acs5ProfilesValuesDP0201DP020006E, dP020006PE: Acs5ProfilesValuesDP0201DP020006PE, dP020007E: Acs5ProfilesValuesDP0201DP020007E, dP020007PE: Acs5ProfilesValuesDP0201DP020007PE, dP020008E: Acs5ProfilesValuesDP0201DP020008E, dP020008PE: Acs5ProfilesValuesDP0201DP020008PE, dP020009E: Acs5ProfilesValuesDP0201DP020009E, dP020009PE: Acs5ProfilesValuesDP0201DP020009PE, dP020010E: Acs5ProfilesValuesDP0201DP020010E, dP020010PE: Acs5ProfilesValuesDP0201DP020010PE, dP020011E: Acs5ProfilesValuesDP0201DP020011E, dP020011PE: Acs5ProfilesValuesDP0201DP020011PE, dP020014E: Acs5ProfilesValuesDP0201DP020014E, dP020014PE: Acs5ProfilesValuesDP0201DP020014PE, dP020015E: Acs5ProfilesValuesDP0201DP020015E, dP020015PE: Acs5ProfilesValuesDP0201DP020015PE, dP020016E: Acs5ProfilesValuesDP0201DP020016E, dP020017E: Acs5ProfilesValuesDP0201DP020017E) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP020001E = dP020001E
        self.dP020002E = dP020002E
        self.dP020002PE = dP020002PE
        self.dP020003E = dP020003E
        self.dP020003PE = dP020003PE
        self.dP020006E = dP020006E
        self.dP020006PE = dP020006PE
        self.dP020007E = dP020007E
        self.dP020007PE = dP020007PE
        self.dP020008E = dP020008E
        self.dP020008PE = dP020008PE
        self.dP020009E = dP020009E
        self.dP020009PE = dP020009PE
        self.dP020010E = dP020010E
        self.dP020010PE = dP020010PE
        self.dP020011E = dP020011E
        self.dP020011PE = dP020011PE
        self.dP020014E = dP020014E
        self.dP020014PE = dP020014PE
        self.dP020015E = dP020015E
        self.dP020015PE = dP020015PE
        self.dP020016E = dP020016E
        self.dP020017E = dP020017E
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP020001E = "DP020001E"
        case dP020002E = "DP020002E"
        case dP020002PE = "DP020002PE"
        case dP020003E = "DP020003E"
        case dP020003PE = "DP020003PE"
        case dP020006E = "DP020006E"
        case dP020006PE = "DP020006PE"
        case dP020007E = "DP020007E"
        case dP020007PE = "DP020007PE"
        case dP020008E = "DP020008E"
        case dP020008PE = "DP020008PE"
        case dP020009E = "DP020009E"
        case dP020009PE = "DP020009PE"
        case dP020010E = "DP020010E"
        case dP020010PE = "DP020010PE"
        case dP020011E = "DP020011E"
        case dP020011PE = "DP020011PE"
        case dP020014E = "DP020014E"
        case dP020014PE = "DP020014PE"
        case dP020015E = "DP020015E"
        case dP020015PE = "DP020015PE"
        case dP020016E = "DP020016E"
        case dP020017E = "DP020017E"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP020001E, forKey: .dP020001E)
        try container.encode(dP020002E, forKey: .dP020002E)
        try container.encode(dP020002PE, forKey: .dP020002PE)
        try container.encode(dP020003E, forKey: .dP020003E)
        try container.encode(dP020003PE, forKey: .dP020003PE)
        try container.encode(dP020006E, forKey: .dP020006E)
        try container.encode(dP020006PE, forKey: .dP020006PE)
        try container.encode(dP020007E, forKey: .dP020007E)
        try container.encode(dP020007PE, forKey: .dP020007PE)
        try container.encode(dP020008E, forKey: .dP020008E)
        try container.encode(dP020008PE, forKey: .dP020008PE)
        try container.encode(dP020009E, forKey: .dP020009E)
        try container.encode(dP020009PE, forKey: .dP020009PE)
        try container.encode(dP020010E, forKey: .dP020010E)
        try container.encode(dP020010PE, forKey: .dP020010PE)
        try container.encode(dP020011E, forKey: .dP020011E)
        try container.encode(dP020011PE, forKey: .dP020011PE)
        try container.encode(dP020014E, forKey: .dP020014E)
        try container.encode(dP020014PE, forKey: .dP020014PE)
        try container.encode(dP020015E, forKey: .dP020015E)
        try container.encode(dP020015PE, forKey: .dP020015PE)
        try container.encode(dP020016E, forKey: .dP020016E)
        try container.encode(dP020017E, forKey: .dP020017E)
    }
}

