//
// Acs5ProfilesValuesDP0305.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Acs5ProfilesValuesDP0305: Codable, Hashable {

    public var mDBGroupName: String
    public var mDBGroupCode: String
    public var dP030046E: Acs5ProfilesValuesDP0305DP030046E
    public var dP030046PE: Acs5ProfilesValuesDP0305DP030046PE
    public var dP030047E: Acs5ProfilesValuesDP0305DP030047E
    public var dP030047PE: Acs5ProfilesValuesDP0305DP030047PE
    public var dP030048E: Acs5ProfilesValuesDP0305DP030048E
    public var dP030048PE: Acs5ProfilesValuesDP0305DP030048PE
    public var dP030049E: Acs5ProfilesValuesDP0305DP030049E
    public var dP030049PE: Acs5ProfilesValuesDP0305DP030049PE
    public var dP030050E: Acs5ProfilesValuesDP0305DP030050E
    public var dP030050PE: Acs5ProfilesValuesDP0305DP030050PE

    public init(mDBGroupName: String, mDBGroupCode: String, dP030046E: Acs5ProfilesValuesDP0305DP030046E, dP030046PE: Acs5ProfilesValuesDP0305DP030046PE, dP030047E: Acs5ProfilesValuesDP0305DP030047E, dP030047PE: Acs5ProfilesValuesDP0305DP030047PE, dP030048E: Acs5ProfilesValuesDP0305DP030048E, dP030048PE: Acs5ProfilesValuesDP0305DP030048PE, dP030049E: Acs5ProfilesValuesDP0305DP030049E, dP030049PE: Acs5ProfilesValuesDP0305DP030049PE, dP030050E: Acs5ProfilesValuesDP0305DP030050E, dP030050PE: Acs5ProfilesValuesDP0305DP030050PE) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP030046E = dP030046E
        self.dP030046PE = dP030046PE
        self.dP030047E = dP030047E
        self.dP030047PE = dP030047PE
        self.dP030048E = dP030048E
        self.dP030048PE = dP030048PE
        self.dP030049E = dP030049E
        self.dP030049PE = dP030049PE
        self.dP030050E = dP030050E
        self.dP030050PE = dP030050PE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP030046E = "DP030046E"
        case dP030046PE = "DP030046PE"
        case dP030047E = "DP030047E"
        case dP030047PE = "DP030047PE"
        case dP030048E = "DP030048E"
        case dP030048PE = "DP030048PE"
        case dP030049E = "DP030049E"
        case dP030049PE = "DP030049PE"
        case dP030050E = "DP030050E"
        case dP030050PE = "DP030050PE"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP030046E, forKey: .dP030046E)
        try container.encode(dP030046PE, forKey: .dP030046PE)
        try container.encode(dP030047E, forKey: .dP030047E)
        try container.encode(dP030047PE, forKey: .dP030047PE)
        try container.encode(dP030048E, forKey: .dP030048E)
        try container.encode(dP030048PE, forKey: .dP030048PE)
        try container.encode(dP030049E, forKey: .dP030049E)
        try container.encode(dP030049PE, forKey: .dP030049PE)
        try container.encode(dP030050E, forKey: .dP030050E)
        try container.encode(dP030050PE, forKey: .dP030050PE)
    }
}

