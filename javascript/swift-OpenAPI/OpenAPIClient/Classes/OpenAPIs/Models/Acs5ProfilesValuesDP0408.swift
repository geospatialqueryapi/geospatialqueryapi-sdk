//
// Acs5ProfilesValuesDP0408.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** VEHICLES AVAILABLE */
public struct Acs5ProfilesValuesDP0408: Codable, Hashable {

    /** VEHICLES AVAILABLE */
    public var mDBGroupName: String
    /** DP0408 */
    public var mDBGroupCode: String
    public var dP040057E: Acs5ProfilesValuesDP0408DP040057E
    public var dP040057PE: Acs5ProfilesValuesDP0408DP040057PE
    public var dP040058E: Acs5ProfilesValuesDP0408DP040058E
    public var dP040058PE: Acs5ProfilesValuesDP0408DP040058PE
    public var dP040059E: Acs5ProfilesValuesDP0408DP040059E
    public var dP040059PE: Acs5ProfilesValuesDP0408DP040059PE
    public var dP040060E: Acs5ProfilesValuesDP0408DP040060E
    public var dP040060PE: Acs5ProfilesValuesDP0408DP040060PE
    public var dP040061E: Acs5ProfilesValuesDP0408DP040061E
    public var dP040061PE: Acs5ProfilesValuesDP0408DP040061PE

    public init(mDBGroupName: String, mDBGroupCode: String, dP040057E: Acs5ProfilesValuesDP0408DP040057E, dP040057PE: Acs5ProfilesValuesDP0408DP040057PE, dP040058E: Acs5ProfilesValuesDP0408DP040058E, dP040058PE: Acs5ProfilesValuesDP0408DP040058PE, dP040059E: Acs5ProfilesValuesDP0408DP040059E, dP040059PE: Acs5ProfilesValuesDP0408DP040059PE, dP040060E: Acs5ProfilesValuesDP0408DP040060E, dP040060PE: Acs5ProfilesValuesDP0408DP040060PE, dP040061E: Acs5ProfilesValuesDP0408DP040061E, dP040061PE: Acs5ProfilesValuesDP0408DP040061PE) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP040057E = dP040057E
        self.dP040057PE = dP040057PE
        self.dP040058E = dP040058E
        self.dP040058PE = dP040058PE
        self.dP040059E = dP040059E
        self.dP040059PE = dP040059PE
        self.dP040060E = dP040060E
        self.dP040060PE = dP040060PE
        self.dP040061E = dP040061E
        self.dP040061PE = dP040061PE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP040057E = "DP040057E"
        case dP040057PE = "DP040057PE"
        case dP040058E = "DP040058E"
        case dP040058PE = "DP040058PE"
        case dP040059E = "DP040059E"
        case dP040059PE = "DP040059PE"
        case dP040060E = "DP040060E"
        case dP040060PE = "DP040060PE"
        case dP040061E = "DP040061E"
        case dP040061PE = "DP040061PE"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP040057E, forKey: .dP040057E)
        try container.encode(dP040057PE, forKey: .dP040057PE)
        try container.encode(dP040058E, forKey: .dP040058E)
        try container.encode(dP040058PE, forKey: .dP040058PE)
        try container.encode(dP040059E, forKey: .dP040059E)
        try container.encode(dP040059PE, forKey: .dP040059PE)
        try container.encode(dP040060E, forKey: .dP040060E)
        try container.encode(dP040060PE, forKey: .dP040060PE)
        try container.encode(dP040061E, forKey: .dP040061E)
        try container.encode(dP040061PE, forKey: .dP040061PE)
    }
}

