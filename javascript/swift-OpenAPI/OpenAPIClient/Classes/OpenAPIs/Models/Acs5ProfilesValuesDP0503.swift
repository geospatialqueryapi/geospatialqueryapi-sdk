//
// Acs5ProfilesValuesDP0503.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Acs5ProfilesValuesDP0503: Codable, Hashable {

    public var mDBGroupName: String
    public var mDBGroupCode: String
    public var dP050025E: Acs5ProfilesValuesDP0503DP050025E
    public var dP050025PE: Acs5ProfilesValuesDP0503DP050025PE
    public var dP050026E: Acs5ProfilesValuesDP0503DP050026E
    public var dP050026PE: Acs5ProfilesValuesDP0503DP050026PE
    public var dP050027E: Acs5ProfilesValuesDP0503DP050027E
    public var dP050027PE: Acs5ProfilesValuesDP0503DP050027PE
    public var dP050029E: Acs5ProfilesValuesDP0503DP050029E
    public var dP050029PE: Acs5ProfilesValuesDP0503DP050029PE
    public var dP050030E: Acs5ProfilesValuesDP0503DP050030E
    public var dP050030PE: Acs5ProfilesValuesDP0503DP050030PE
    public var dP050031E: Acs5ProfilesValuesDP0503DP050031E
    public var dP050031PE: Acs5ProfilesValuesDP0503DP050031PE
    public var dP050032E: Acs5ProfilesValuesDP0503DP050032E

    public init(mDBGroupName: String, mDBGroupCode: String, dP050025E: Acs5ProfilesValuesDP0503DP050025E, dP050025PE: Acs5ProfilesValuesDP0503DP050025PE, dP050026E: Acs5ProfilesValuesDP0503DP050026E, dP050026PE: Acs5ProfilesValuesDP0503DP050026PE, dP050027E: Acs5ProfilesValuesDP0503DP050027E, dP050027PE: Acs5ProfilesValuesDP0503DP050027PE, dP050029E: Acs5ProfilesValuesDP0503DP050029E, dP050029PE: Acs5ProfilesValuesDP0503DP050029PE, dP050030E: Acs5ProfilesValuesDP0503DP050030E, dP050030PE: Acs5ProfilesValuesDP0503DP050030PE, dP050031E: Acs5ProfilesValuesDP0503DP050031E, dP050031PE: Acs5ProfilesValuesDP0503DP050031PE, dP050032E: Acs5ProfilesValuesDP0503DP050032E) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP050025E = dP050025E
        self.dP050025PE = dP050025PE
        self.dP050026E = dP050026E
        self.dP050026PE = dP050026PE
        self.dP050027E = dP050027E
        self.dP050027PE = dP050027PE
        self.dP050029E = dP050029E
        self.dP050029PE = dP050029PE
        self.dP050030E = dP050030E
        self.dP050030PE = dP050030PE
        self.dP050031E = dP050031E
        self.dP050031PE = dP050031PE
        self.dP050032E = dP050032E
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP050025E = "DP050025E"
        case dP050025PE = "DP050025PE"
        case dP050026E = "DP050026E"
        case dP050026PE = "DP050026PE"
        case dP050027E = "DP050027E"
        case dP050027PE = "DP050027PE"
        case dP050029E = "DP050029E"
        case dP050029PE = "DP050029PE"
        case dP050030E = "DP050030E"
        case dP050030PE = "DP050030PE"
        case dP050031E = "DP050031E"
        case dP050031PE = "DP050031PE"
        case dP050032E = "DP050032E"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP050025E, forKey: .dP050025E)
        try container.encode(dP050025PE, forKey: .dP050025PE)
        try container.encode(dP050026E, forKey: .dP050026E)
        try container.encode(dP050026PE, forKey: .dP050026PE)
        try container.encode(dP050027E, forKey: .dP050027E)
        try container.encode(dP050027PE, forKey: .dP050027PE)
        try container.encode(dP050029E, forKey: .dP050029E)
        try container.encode(dP050029PE, forKey: .dP050029PE)
        try container.encode(dP050030E, forKey: .dP050030E)
        try container.encode(dP050030PE, forKey: .dP050030PE)
        try container.encode(dP050031E, forKey: .dP050031E)
        try container.encode(dP050031PE, forKey: .dP050031PE)
        try container.encode(dP050032E, forKey: .dP050032E)
    }
}

