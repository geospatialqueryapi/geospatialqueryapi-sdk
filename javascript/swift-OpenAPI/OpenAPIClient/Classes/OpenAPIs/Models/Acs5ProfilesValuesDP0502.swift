//
// Acs5ProfilesValuesDP0502.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Acs5ProfilesValuesDP0502: Codable, Hashable {

    public var mDBGroupName: String
    public var mDBGroupCode: String
    public var dP050005E: Acs5ProfilesValuesDP0502DP050005E
    public var dP050005PE: Acs5ProfilesValuesDP0502DP050005PE
    public var dP050018E: Acs5ProfilesValuesDP0502DP050018E
    public var dP050019E: Acs5ProfilesValuesDP0502DP050019E
    public var dP050019PE: Acs5ProfilesValuesDP0502DP050019PE
    public var dP050021E: Acs5ProfilesValuesDP0502DP050021E
    public var dP050021PE: Acs5ProfilesValuesDP0502DP050021PE
    public var dP050024E: Acs5ProfilesValuesDP0502DP050024E
    public var dP050024PE: Acs5ProfilesValuesDP0502DP050024PE

    public init(mDBGroupName: String, mDBGroupCode: String, dP050005E: Acs5ProfilesValuesDP0502DP050005E, dP050005PE: Acs5ProfilesValuesDP0502DP050005PE, dP050018E: Acs5ProfilesValuesDP0502DP050018E, dP050019E: Acs5ProfilesValuesDP0502DP050019E, dP050019PE: Acs5ProfilesValuesDP0502DP050019PE, dP050021E: Acs5ProfilesValuesDP0502DP050021E, dP050021PE: Acs5ProfilesValuesDP0502DP050021PE, dP050024E: Acs5ProfilesValuesDP0502DP050024E, dP050024PE: Acs5ProfilesValuesDP0502DP050024PE) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP050005E = dP050005E
        self.dP050005PE = dP050005PE
        self.dP050018E = dP050018E
        self.dP050019E = dP050019E
        self.dP050019PE = dP050019PE
        self.dP050021E = dP050021E
        self.dP050021PE = dP050021PE
        self.dP050024E = dP050024E
        self.dP050024PE = dP050024PE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP050005E = "DP050005E"
        case dP050005PE = "DP050005PE"
        case dP050018E = "DP050018E"
        case dP050019E = "DP050019E"
        case dP050019PE = "DP050019PE"
        case dP050021E = "DP050021E"
        case dP050021PE = "DP050021PE"
        case dP050024E = "DP050024E"
        case dP050024PE = "DP050024PE"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP050005E, forKey: .dP050005E)
        try container.encode(dP050005PE, forKey: .dP050005PE)
        try container.encode(dP050018E, forKey: .dP050018E)
        try container.encode(dP050019E, forKey: .dP050019E)
        try container.encode(dP050019PE, forKey: .dP050019PE)
        try container.encode(dP050021E, forKey: .dP050021E)
        try container.encode(dP050021PE, forKey: .dP050021PE)
        try container.encode(dP050024E, forKey: .dP050024E)
        try container.encode(dP050024PE, forKey: .dP050024PE)
    }
}

