//
// Acs5ProfilesValuesDP0302.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** COMMUTING TO WORK */
public struct Acs5ProfilesValuesDP0302: Codable, Hashable {

    /** COMMUTING TO WORK */
    public var mDBGroupName: String
    /** DP0302 */
    public var mDBGroupCode: String
    public var dP030018E: Acs5ProfilesValuesDP0302DP030018E
    public var dP030018PE: Acs5ProfilesValuesDP0302DP030018PE
    public var dP030024E: Acs5ProfilesValuesDP0302DP030024E
    public var dP030024PE: Acs5ProfilesValuesDP0302DP030024PE
    public var dP030025E: Acs5ProfilesValuesDP0302DP030025E

    public init(mDBGroupName: String, mDBGroupCode: String, dP030018E: Acs5ProfilesValuesDP0302DP030018E, dP030018PE: Acs5ProfilesValuesDP0302DP030018PE, dP030024E: Acs5ProfilesValuesDP0302DP030024E, dP030024PE: Acs5ProfilesValuesDP0302DP030024PE, dP030025E: Acs5ProfilesValuesDP0302DP030025E) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP030018E = dP030018E
        self.dP030018PE = dP030018PE
        self.dP030024E = dP030024E
        self.dP030024PE = dP030024PE
        self.dP030025E = dP030025E
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP030018E = "DP030018E"
        case dP030018PE = "DP030018PE"
        case dP030024E = "DP030024E"
        case dP030024PE = "DP030024PE"
        case dP030025E = "DP030025E"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP030018E, forKey: .dP030018E)
        try container.encode(dP030018PE, forKey: .dP030018PE)
        try container.encode(dP030024E, forKey: .dP030024E)
        try container.encode(dP030024PE, forKey: .dP030024PE)
        try container.encode(dP030025E, forKey: .dP030025E)
    }
}

