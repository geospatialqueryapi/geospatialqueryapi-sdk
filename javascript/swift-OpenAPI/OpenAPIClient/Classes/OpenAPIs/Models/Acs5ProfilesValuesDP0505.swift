//
// Acs5ProfilesValuesDP0505.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** HISPANIC OR LATINO AND RACE */
public struct Acs5ProfilesValuesDP0505: Codable, Hashable {

    /** HISPANIC OR LATINO AND RACE */
    public var mDBGroupName: String
    /** DP0505 */
    public var mDBGroupCode: String
    public var dP050070E: Acs5ProfilesValuesDP0505DP050070E
    public var dP050071E: Acs5ProfilesValuesDP0505DP050071E
    public var dP050071PE: Acs5ProfilesValuesDP0505DP050071PE
    public var dP050076E: Acs5ProfilesValuesDP0505DP050076E
    public var dP050076PE: Acs5ProfilesValuesDP0505DP050076PE
    public var dP050077E: Acs5ProfilesValuesDP0505DP050077E
    public var dP050077PE: Acs5ProfilesValuesDP0505DP050077PE
    public var dP050083E: Acs5ProfilesValuesDP0505DP050083E
    public var dP050083PE: Acs5ProfilesValuesDP0505DP050083PE

    public init(mDBGroupName: String, mDBGroupCode: String, dP050070E: Acs5ProfilesValuesDP0505DP050070E, dP050071E: Acs5ProfilesValuesDP0505DP050071E, dP050071PE: Acs5ProfilesValuesDP0505DP050071PE, dP050076E: Acs5ProfilesValuesDP0505DP050076E, dP050076PE: Acs5ProfilesValuesDP0505DP050076PE, dP050077E: Acs5ProfilesValuesDP0505DP050077E, dP050077PE: Acs5ProfilesValuesDP0505DP050077PE, dP050083E: Acs5ProfilesValuesDP0505DP050083E, dP050083PE: Acs5ProfilesValuesDP0505DP050083PE) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP050070E = dP050070E
        self.dP050071E = dP050071E
        self.dP050071PE = dP050071PE
        self.dP050076E = dP050076E
        self.dP050076PE = dP050076PE
        self.dP050077E = dP050077E
        self.dP050077PE = dP050077PE
        self.dP050083E = dP050083E
        self.dP050083PE = dP050083PE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP050070E = "DP050070E"
        case dP050071E = "DP050071E"
        case dP050071PE = "DP050071PE"
        case dP050076E = "DP050076E"
        case dP050076PE = "DP050076PE"
        case dP050077E = "DP050077E"
        case dP050077PE = "DP050077PE"
        case dP050083E = "DP050083E"
        case dP050083PE = "DP050083PE"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP050070E, forKey: .dP050070E)
        try container.encode(dP050071E, forKey: .dP050071E)
        try container.encode(dP050071PE, forKey: .dP050071PE)
        try container.encode(dP050076E, forKey: .dP050076E)
        try container.encode(dP050076PE, forKey: .dP050076PE)
        try container.encode(dP050077E, forKey: .dP050077E)
        try container.encode(dP050077PE, forKey: .dP050077PE)
        try container.encode(dP050083E, forKey: .dP050083E)
        try container.encode(dP050083PE, forKey: .dP050083PE)
    }
}

