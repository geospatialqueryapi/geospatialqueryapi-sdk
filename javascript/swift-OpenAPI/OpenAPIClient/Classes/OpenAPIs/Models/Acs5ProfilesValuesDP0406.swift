//
// Acs5ProfilesValuesDP0406.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** HOUSING TENURE */
public struct Acs5ProfilesValuesDP0406: Codable, Hashable {

    /** HOUSING TENURE */
    public var mDBGroupName: String
    /** DP0406 */
    public var mDBGroupCode: String
    public var dP040045E: Acs5ProfilesValuesDP0406DP040045E
    public var dP040045PE: Acs5ProfilesValuesDP0406DP040045PE
    public var dP040046E: Acs5ProfilesValuesDP0406DP040046E
    public var dP040046PE: Acs5ProfilesValuesDP0406DP040046PE
    public var dP040047E: Acs5ProfilesValuesDP0406DP040047E
    public var dP040047PE: Acs5ProfilesValuesDP0406DP040047PE
    public var dP040048E: Acs5ProfilesValuesDP0406DP040048E
    public var dP040049E: Acs5ProfilesValuesDP0406DP040049E

    public init(mDBGroupName: String, mDBGroupCode: String, dP040045E: Acs5ProfilesValuesDP0406DP040045E, dP040045PE: Acs5ProfilesValuesDP0406DP040045PE, dP040046E: Acs5ProfilesValuesDP0406DP040046E, dP040046PE: Acs5ProfilesValuesDP0406DP040046PE, dP040047E: Acs5ProfilesValuesDP0406DP040047E, dP040047PE: Acs5ProfilesValuesDP0406DP040047PE, dP040048E: Acs5ProfilesValuesDP0406DP040048E, dP040049E: Acs5ProfilesValuesDP0406DP040049E) {
        self.mDBGroupName = mDBGroupName
        self.mDBGroupCode = mDBGroupCode
        self.dP040045E = dP040045E
        self.dP040045PE = dP040045PE
        self.dP040046E = dP040046E
        self.dP040046PE = dP040046PE
        self.dP040047E = dP040047E
        self.dP040047PE = dP040047PE
        self.dP040048E = dP040048E
        self.dP040049E = dP040049E
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mDBGroupName = "MDBGroupName"
        case mDBGroupCode = "MDBGroupCode"
        case dP040045E = "DP040045E"
        case dP040045PE = "DP040045PE"
        case dP040046E = "DP040046E"
        case dP040046PE = "DP040046PE"
        case dP040047E = "DP040047E"
        case dP040047PE = "DP040047PE"
        case dP040048E = "DP040048E"
        case dP040049E = "DP040049E"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mDBGroupName, forKey: .mDBGroupName)
        try container.encode(mDBGroupCode, forKey: .mDBGroupCode)
        try container.encode(dP040045E, forKey: .dP040045E)
        try container.encode(dP040045PE, forKey: .dP040045PE)
        try container.encode(dP040046E, forKey: .dP040046E)
        try container.encode(dP040046PE, forKey: .dP040046PE)
        try container.encode(dP040047E, forKey: .dP040047E)
        try container.encode(dP040047PE, forKey: .dP040047PE)
        try container.encode(dP040048E, forKey: .dP040048E)
        try container.encode(dP040049E, forKey: .dP040049E)
    }
}

