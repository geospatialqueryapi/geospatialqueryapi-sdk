//
// DataAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DataAPI {

    /**
     v1-boundaries-uscounty-id-GEOID
     
     - parameter GEOID: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUscountyIdGEOID(GEOID: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUscountyIdGEOIDWithRequestBuilder(GEOID: GEOID).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-uscounty-id-GEOID
     - GET /v1/boundaries/uscounty/id/{GEOID}
     - U.S. County by GEOID.  Example: GEOID=06001 Alameda, Alameda County, CA, California  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter GEOID: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUscountyIdGEOIDWithRequestBuilder(GEOID: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/uscounty/id/{GEOID}"
        let GEOIDPreEscape = "\(APIHelper.mapValueToPathItem(GEOID))"
        let GEOIDPostEscape = GEOIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{GEOID}", with: GEOIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-uscounty-LatLon
     
     - parameter latLon: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUscountyLatLon(latLon: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUscountyLatLonWithRequestBuilder(latLon: latLon).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-uscounty-LatLon
     - GET /v1/boundaries/uscounty/latlon/{LatLon}
     - U.S. County by lat/lon.  Example: LatLon=33.6756872|-117.7772068 LatLon=33.6756872,-117.7772068  Note: valid delimiters: | or ,  County by lat/lon: Alameda, Orange County, CA, California     Note: valid delimiters: | or ,  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter latLon: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUscountyLatLonWithRequestBuilder(latLon: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/uscounty/latlon/{LatLon}"
        let latLonPreEscape = "\(APIHelper.mapValueToPathItem(latLon))"
        let latLonPostEscape = latLonPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{LatLon}", with: latLonPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-uscousub-id-GEOID
     
     - parameter GEOID: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUscousubIdGEOID(GEOID: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUscousubIdGEOIDWithRequestBuilder(GEOID: GEOID).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-uscousub-id-GEOID
     - GET /v1/boundaries/uscousub/id/{GEOID}
     - U.S. County Subdivision by GEOID.  Example: GEOID=0605991977 CA, Orange, Orange County, Mission Viejo CCD  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter GEOID: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUscousubIdGEOIDWithRequestBuilder(GEOID: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/uscousub/id/{GEOID}"
        let GEOIDPreEscape = "\(APIHelper.mapValueToPathItem(GEOID))"
        let GEOIDPostEscape = GEOIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{GEOID}", with: GEOIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-uscousub-LatLon
     
     - parameter latLon: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUscousubLatLon(latLon: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUscousubLatLonWithRequestBuilder(latLon: latLon).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-uscousub-LatLon
     - GET /v1/boundaries/uscousub/latlon/{LatLon}
     - U.S. County Subdivision by lat/lon  Example: LatLon=33.5627268|-117.5922593 LatLon=33.5627268,-117.5922593  Note: valid delimiters: | or ,  County by lat/lon: Alameda, Orange County, CA, California  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter latLon: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUscousubLatLonWithRequestBuilder(latLon: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/uscousub/latlon/{LatLon}"
        let latLonPreEscape = "\(APIHelper.mapValueToPathItem(latLon))"
        let latLonPostEscape = latLonPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{LatLon}", with: latLonPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-usplace-id-GEOID
     
     - parameter GEOID: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUsplaceIdGEOID(GEOID: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUsplaceIdGEOIDWithRequestBuilder(GEOID: GEOID).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-usplace-id-GEOID
     - GET /v1/boundaries/usplace/id/{GEOID}
     - U.S. Place by GEOID  Example: GEOID=0686804 CA, California, Yolo County, Knights Landing CCD  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter GEOID: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUsplaceIdGEOIDWithRequestBuilder(GEOID: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/usplace/id/{GEOID}"
        let GEOIDPreEscape = "\(APIHelper.mapValueToPathItem(GEOID))"
        let GEOIDPostEscape = GEOIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{GEOID}", with: GEOIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-usplace-LatLon
     
     - parameter latLon: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUsplaceLatLon(latLon: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUsplaceLatLonWithRequestBuilder(latLon: latLon).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-usplace-LatLon
     - GET /v1/boundaries/usplace/latlon/{LatLon}
     - U.S. Place by lat/lon  Example: LatLon=33.8890375|-117.7720695 LatLon=33.8890375,-117.7720695  Note: valid delimiters: | or ,  CA, California, Orange County, Anaheim-Santa Ana-Garden Grove, Yorba Linda city  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter latLon: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUsplaceLatLonWithRequestBuilder(latLon: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/usplace/latlon/{LatLon}"
        let latLonPreEscape = "\(APIHelper.mapValueToPathItem(latLon))"
        let latLonPostEscape = latLonPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{LatLon}", with: latLonPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-usstate-id-GEOID
     
     - parameter GEOID: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUsstateIdGEOID(GEOID: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUsstateIdGEOIDWithRequestBuilder(GEOID: GEOID).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-usstate-id-GEOID
     - GET /v1/boundaries/usstate/id/{GEOID}
     - U.S. State by GEOID  Example: GEOID=06 CA, California  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter GEOID: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUsstateIdGEOIDWithRequestBuilder(GEOID: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/usstate/id/{GEOID}"
        let GEOIDPreEscape = "\(APIHelper.mapValueToPathItem(GEOID))"
        let GEOIDPostEscape = GEOIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{GEOID}", with: GEOIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-usstate-LatLon
     
     - parameter latLon: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUsstateLatLon(latLon: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUsstateLatLonWithRequestBuilder(latLon: latLon).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-usstate-LatLon
     - GET /v1/boundaries/usstate/latlon/{LatLon}
     - U.S. State by lat/lon.  Example: LatLon=37.1551773|-119.5434183 LatLon=37.1551773,-119.5434183  Note: valid delimiters: | or ,  CA, California.  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter latLon: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUsstateLatLonWithRequestBuilder(latLon: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/usstate/latlon/{LatLon}"
        let latLonPreEscape = "\(APIHelper.mapValueToPathItem(latLon))"
        let latLonPostEscape = latLonPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{LatLon}", with: latLonPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-ustract-id-GEOID
     
     - parameter GEOID: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUstractIdGEOID(GEOID: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUstractIdGEOIDWithRequestBuilder(GEOID: GEOID).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-ustract-id-GEOID
     - GET /v1/boundaries/ustract/id/{GEOID}
     - U.S. Census Tract by GEOID  Example: GEOID=06059990100 CA, California, Orange County, Census Tract 1105  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter GEOID: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUstractIdGEOIDWithRequestBuilder(GEOID: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/ustract/id/{GEOID}"
        let GEOIDPreEscape = "\(APIHelper.mapValueToPathItem(GEOID))"
        let GEOIDPostEscape = GEOIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{GEOID}", with: GEOIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-ustract-LatLon
     
     - parameter latLon: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUstractLatLon(latLon: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUstractLatLonWithRequestBuilder(latLon: latLon).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-ustract-LatLon
     - GET /v1/boundaries/ustract/latlon/{LatLon}
     - U.S. Census Tract by lat/lon  Example: LatLon=33.5354639|-117.7720695 LatLon=33.5354639,-117.7720695  Note: valid delimiters: | or ,  CA, California, Orange County, Census Tract 9901  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter latLon: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUstractLatLonWithRequestBuilder(latLon: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/ustract/latlon/{LatLon}"
        let latLonPreEscape = "\(APIHelper.mapValueToPathItem(latLon))"
        let latLonPostEscape = latLonPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{LatLon}", with: latLonPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-uszcta-id-GEOID
     
     - parameter GEOID: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUszctaIdGEOID(GEOID: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUszctaIdGEOIDWithRequestBuilder(GEOID: GEOID).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-uszcta-id-GEOID
     - GET /v1/boundaries/uszcta/id/{GEOID}
     - U.S. ZCTA5 by GEOID  Example: GEOID=92688 CA, California, Orange County, 92688  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter GEOID: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUszctaIdGEOIDWithRequestBuilder(GEOID: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/uszcta/id/{GEOID}"
        let GEOIDPreEscape = "\(APIHelper.mapValueToPathItem(GEOID))"
        let GEOIDPostEscape = GEOIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{GEOID}", with: GEOIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     v1-boundaries-uszcta-LatLon
     
     - parameter latLon: (path) local identifier of a feature 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV1BoundariesUszctaLatLon(latLon: String, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: FeatureGeoJSON?, _ error: Error?) -> Void)) {
        getV1BoundariesUszctaLatLonWithRequestBuilder(latLon: latLon).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     v1-boundaries-uszcta-LatLon
     - GET /v1/boundaries/uszcta/latlon/{LatLon}
     - U.S. ZCTA5 by lat/lon  Example: LatLon=33.6196715|-117.6120873 LatLon=33.6196715,-117.6120873  Note: valid delimiters: | or ,  CA, California, Orange County, 92688  Please look at:   /properties/info/TimeToRun  to get the actial time to run. 
     - parameter latLon: (path) local identifier of a feature 
     - returns: RequestBuilder<FeatureGeoJSON> 
     */
    open class func getV1BoundariesUszctaLatLonWithRequestBuilder(latLon: String) -> RequestBuilder<FeatureGeoJSON> {
        var localVariablePath = "/v1/boundaries/uszcta/latlon/{LatLon}"
        let latLonPreEscape = "\(APIHelper.mapValueToPathItem(latLon))"
        let latLonPostEscape = latLonPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{LatLon}", with: latLonPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeatureGeoJSON>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
