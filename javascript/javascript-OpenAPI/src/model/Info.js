/**
 * Geo Spatial Query Api - US Census Boundaries and Census Data
 * Easily integrate geospatial point-in-polygon search, census boundaries, location-based data, geofencing, and other location-based features into web and mobile apps. Our Software Development Kit (SDK) is available on GitHub at https://github.com/geospatialqueryapi/geospatialqueryapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones.      Copyright Â© 2021 Mobile Data Books, LLC. All Rights Reserved.  
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mobiledatabooks@mobiledatabooks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Info model module.
 * @module model/Info
 * @version 1.0.0
 */
class Info {
    /**
     * Constructs a new <code>Info</code>.
     * @alias module:model/Info
     * @param uSStateGEOID {String} The US State GEOID
     * @param uSStateUSPS {String} The US State abbreviation
     * @param uSStateNameFull {String} The US State full name
     * @param uSCountyGEOID {String} The US County GEOID
     * @param uSCountyName {String} The US County name
     * @param uSCountyNameFull {String} The US County full name
     * @param USCOUSUBGEOID {String} The US County subdivision
     * @param uSCOUSUBName {String} The US County subdivision GEOID
     * @param uSCOUSUBNameFull {String} The US County subdivision
     * @param uSPlaceGEOID {String} The US Place GEOID
     * @param uSPlaceNAME {String} The US Place name
     * @param uSPlaceNameFull {String} The US Place full name
     * @param USZCTA {String} The US ZCTA full name
     * @param uSTractGEOID {String} The US Census tract GEOID
     * @param uSTractName {String} The US Census tract name
     * @param uSTractNameFull {String} The US Census tract full name
     * @param timeStamp {String} TimeStamp
     * @param timeToRun {String} TimeToRun
     * @param accountID {String} AccountID
     * @param accountName {String} AccountName
     * @param request {String} Request
     * @param result {String} Result
     * @param version {String} Version
     * @param copyright {String} 
     */
    constructor(uSStateGEOID, uSStateUSPS, uSStateNameFull, uSCountyGEOID, uSCountyName, uSCountyNameFull, USCOUSUBGEOID, uSCOUSUBName, uSCOUSUBNameFull, uSPlaceGEOID, uSPlaceNAME, uSPlaceNameFull, USZCTA, uSTractGEOID, uSTractName, uSTractNameFull, timeStamp, timeToRun, accountID, accountName, request, result, version, copyright) { 
        
        Info.initialize(this, uSStateGEOID, uSStateUSPS, uSStateNameFull, uSCountyGEOID, uSCountyName, uSCountyNameFull, USCOUSUBGEOID, uSCOUSUBName, uSCOUSUBNameFull, uSPlaceGEOID, uSPlaceNAME, uSPlaceNameFull, USZCTA, uSTractGEOID, uSTractName, uSTractNameFull, timeStamp, timeToRun, accountID, accountName, request, result, version, copyright);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, uSStateGEOID, uSStateUSPS, uSStateNameFull, uSCountyGEOID, uSCountyName, uSCountyNameFull, USCOUSUBGEOID, uSCOUSUBName, uSCOUSUBNameFull, uSPlaceGEOID, uSPlaceNAME, uSPlaceNameFull, USZCTA, uSTractGEOID, uSTractName, uSTractNameFull, timeStamp, timeToRun, accountID, accountName, request, result, version, copyright) { 
        obj['USStateGEOID'] = uSStateGEOID;
        obj['USStateUSPS'] = uSStateUSPS;
        obj['USStateNameFull'] = uSStateNameFull;
        obj['USCountyGEOID'] = uSCountyGEOID;
        obj['USCountyName'] = uSCountyName;
        obj['USCountyNameFull'] = uSCountyNameFull;
        obj['USCOUSUBGEOID'] = USCOUSUBGEOID;
        obj['USCOUSUBName'] = uSCOUSUBName;
        obj['USCOUSUBNameFull'] = uSCOUSUBNameFull;
        obj['USPlaceGEOID'] = uSPlaceGEOID;
        obj['USPlaceNAME'] = uSPlaceNAME;
        obj['USPlaceNameFull'] = uSPlaceNameFull;
        obj['USZCTA'] = USZCTA;
        obj['USTractGEOID'] = uSTractGEOID;
        obj['USTractName'] = uSTractName;
        obj['USTractNameFull'] = uSTractNameFull;
        obj['TimeStamp'] = timeStamp;
        obj['TimeToRun'] = timeToRun;
        obj['AccountID'] = accountID;
        obj['AccountName'] = accountName;
        obj['Request'] = request;
        obj['Result'] = result;
        obj['Version'] = version;
        obj['Copyright'] = copyright;
    }

    /**
     * Constructs a <code>Info</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Info} obj Optional instance to populate.
     * @return {module:model/Info} The populated <code>Info</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Info();

            if (data.hasOwnProperty('USStateGEOID')) {
                obj['USStateGEOID'] = ApiClient.convertToType(data['USStateGEOID'], 'String');
            }
            if (data.hasOwnProperty('USStateUSPS')) {
                obj['USStateUSPS'] = ApiClient.convertToType(data['USStateUSPS'], 'String');
            }
            if (data.hasOwnProperty('USStateNameFull')) {
                obj['USStateNameFull'] = ApiClient.convertToType(data['USStateNameFull'], 'String');
            }
            if (data.hasOwnProperty('USCountyGEOID')) {
                obj['USCountyGEOID'] = ApiClient.convertToType(data['USCountyGEOID'], 'String');
            }
            if (data.hasOwnProperty('USCountyName')) {
                obj['USCountyName'] = ApiClient.convertToType(data['USCountyName'], 'String');
            }
            if (data.hasOwnProperty('USCountyNameFull')) {
                obj['USCountyNameFull'] = ApiClient.convertToType(data['USCountyNameFull'], 'String');
            }
            if (data.hasOwnProperty('USCOUSUBGEOID')) {
                obj['USCOUSUBGEOID'] = ApiClient.convertToType(data['USCOUSUBGEOID'], 'String');
            }
            if (data.hasOwnProperty('USCOUSUBName')) {
                obj['USCOUSUBName'] = ApiClient.convertToType(data['USCOUSUBName'], 'String');
            }
            if (data.hasOwnProperty('USCOUSUBNameFull')) {
                obj['USCOUSUBNameFull'] = ApiClient.convertToType(data['USCOUSUBNameFull'], 'String');
            }
            if (data.hasOwnProperty('USPlaceGEOID')) {
                obj['USPlaceGEOID'] = ApiClient.convertToType(data['USPlaceGEOID'], 'String');
            }
            if (data.hasOwnProperty('USPlaceNAME')) {
                obj['USPlaceNAME'] = ApiClient.convertToType(data['USPlaceNAME'], 'String');
            }
            if (data.hasOwnProperty('USPlaceNameFull')) {
                obj['USPlaceNameFull'] = ApiClient.convertToType(data['USPlaceNameFull'], 'String');
            }
            if (data.hasOwnProperty('USZCTA')) {
                obj['USZCTA'] = ApiClient.convertToType(data['USZCTA'], 'String');
            }
            if (data.hasOwnProperty('USTractGEOID')) {
                obj['USTractGEOID'] = ApiClient.convertToType(data['USTractGEOID'], 'String');
            }
            if (data.hasOwnProperty('USTractName')) {
                obj['USTractName'] = ApiClient.convertToType(data['USTractName'], 'String');
            }
            if (data.hasOwnProperty('USTractNameFull')) {
                obj['USTractNameFull'] = ApiClient.convertToType(data['USTractNameFull'], 'String');
            }
            if (data.hasOwnProperty('TimeStamp')) {
                obj['TimeStamp'] = ApiClient.convertToType(data['TimeStamp'], 'String');
            }
            if (data.hasOwnProperty('TimeToRun')) {
                obj['TimeToRun'] = ApiClient.convertToType(data['TimeToRun'], 'String');
            }
            if (data.hasOwnProperty('AccountID')) {
                obj['AccountID'] = ApiClient.convertToType(data['AccountID'], 'String');
            }
            if (data.hasOwnProperty('AccountName')) {
                obj['AccountName'] = ApiClient.convertToType(data['AccountName'], 'String');
            }
            if (data.hasOwnProperty('Request')) {
                obj['Request'] = ApiClient.convertToType(data['Request'], 'String');
            }
            if (data.hasOwnProperty('Result')) {
                obj['Result'] = ApiClient.convertToType(data['Result'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('Copyright')) {
                obj['Copyright'] = ApiClient.convertToType(data['Copyright'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The US State GEOID
 * @member {String} USStateGEOID
 */
Info.prototype['USStateGEOID'] = undefined;

/**
 * The US State abbreviation
 * @member {String} USStateUSPS
 */
Info.prototype['USStateUSPS'] = undefined;

/**
 * The US State full name
 * @member {String} USStateNameFull
 */
Info.prototype['USStateNameFull'] = undefined;

/**
 * The US County GEOID
 * @member {String} USCountyGEOID
 */
Info.prototype['USCountyGEOID'] = undefined;

/**
 * The US County name
 * @member {String} USCountyName
 */
Info.prototype['USCountyName'] = undefined;

/**
 * The US County full name
 * @member {String} USCountyNameFull
 */
Info.prototype['USCountyNameFull'] = undefined;

/**
 * The US County subdivision
 * @member {String} USCOUSUBGEOID
 */
Info.prototype['USCOUSUBGEOID'] = undefined;

/**
 * The US County subdivision GEOID
 * @member {String} USCOUSUBName
 */
Info.prototype['USCOUSUBName'] = undefined;

/**
 * The US County subdivision
 * @member {String} USCOUSUBNameFull
 */
Info.prototype['USCOUSUBNameFull'] = undefined;

/**
 * The US Place GEOID
 * @member {String} USPlaceGEOID
 */
Info.prototype['USPlaceGEOID'] = undefined;

/**
 * The US Place name
 * @member {String} USPlaceNAME
 */
Info.prototype['USPlaceNAME'] = undefined;

/**
 * The US Place full name
 * @member {String} USPlaceNameFull
 */
Info.prototype['USPlaceNameFull'] = undefined;

/**
 * The US ZCTA full name
 * @member {String} USZCTA
 */
Info.prototype['USZCTA'] = undefined;

/**
 * The US Census tract GEOID
 * @member {String} USTractGEOID
 */
Info.prototype['USTractGEOID'] = undefined;

/**
 * The US Census tract name
 * @member {String} USTractName
 */
Info.prototype['USTractName'] = undefined;

/**
 * The US Census tract full name
 * @member {String} USTractNameFull
 */
Info.prototype['USTractNameFull'] = undefined;

/**
 * TimeStamp
 * @member {String} TimeStamp
 */
Info.prototype['TimeStamp'] = undefined;

/**
 * TimeToRun
 * @member {String} TimeToRun
 */
Info.prototype['TimeToRun'] = undefined;

/**
 * AccountID
 * @member {String} AccountID
 */
Info.prototype['AccountID'] = undefined;

/**
 * AccountName
 * @member {String} AccountName
 */
Info.prototype['AccountName'] = undefined;

/**
 * Request
 * @member {String} Request
 */
Info.prototype['Request'] = undefined;

/**
 * Result
 * @member {String} Result
 */
Info.prototype['Result'] = undefined;

/**
 * Version
 * @member {String} Version
 */
Info.prototype['Version'] = undefined;

/**
 * @member {String} Copyright
 */
Info.prototype['Copyright'] = undefined;






export default Info;

