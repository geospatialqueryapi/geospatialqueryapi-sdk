"""
    Geo Spatial Query Api - US Census Boundaries and Census Data

    Easily integrate geospatial point-in-polygon search, census boundaries, location-based data, geofencing, and other location-based features into web and mobile apps. SDK Our Software Development Kit (SDK) is available on GitHub at https://github.com/geospatialqueryapi/geospatialqueryapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: mobiledatabooks@mobiledatabooks.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)
from ..model_utils import OpenApiModel
from openapi_client.exceptions import ApiAttributeError


def lazy_import():
    from openapi_client.model.acs5_profiles_values_dp0201_dp020001_e import Acs5ProfilesValuesDP0201DP020001E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020002_e import Acs5ProfilesValuesDP0201DP020002E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020002_pe import Acs5ProfilesValuesDP0201DP020002PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020003_e import Acs5ProfilesValuesDP0201DP020003E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020003_pe import Acs5ProfilesValuesDP0201DP020003PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020006_e import Acs5ProfilesValuesDP0201DP020006E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020006_pe import Acs5ProfilesValuesDP0201DP020006PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020007_e import Acs5ProfilesValuesDP0201DP020007E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020007_pe import Acs5ProfilesValuesDP0201DP020007PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020008_e import Acs5ProfilesValuesDP0201DP020008E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020008_pe import Acs5ProfilesValuesDP0201DP020008PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020009_e import Acs5ProfilesValuesDP0201DP020009E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020009_pe import Acs5ProfilesValuesDP0201DP020009PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020010_e import Acs5ProfilesValuesDP0201DP020010E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020010_pe import Acs5ProfilesValuesDP0201DP020010PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020011_e import Acs5ProfilesValuesDP0201DP020011E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020011_pe import Acs5ProfilesValuesDP0201DP020011PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020014_e import Acs5ProfilesValuesDP0201DP020014E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020014_pe import Acs5ProfilesValuesDP0201DP020014PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020015_e import Acs5ProfilesValuesDP0201DP020015E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020015_pe import Acs5ProfilesValuesDP0201DP020015PE
    from openapi_client.model.acs5_profiles_values_dp0201_dp020016_e import Acs5ProfilesValuesDP0201DP020016E
    from openapi_client.model.acs5_profiles_values_dp0201_dp020017_e import Acs5ProfilesValuesDP0201DP020017E
    globals()['Acs5ProfilesValuesDP0201DP020001E'] = Acs5ProfilesValuesDP0201DP020001E
    globals()['Acs5ProfilesValuesDP0201DP020002E'] = Acs5ProfilesValuesDP0201DP020002E
    globals()['Acs5ProfilesValuesDP0201DP020002PE'] = Acs5ProfilesValuesDP0201DP020002PE
    globals()['Acs5ProfilesValuesDP0201DP020003E'] = Acs5ProfilesValuesDP0201DP020003E
    globals()['Acs5ProfilesValuesDP0201DP020003PE'] = Acs5ProfilesValuesDP0201DP020003PE
    globals()['Acs5ProfilesValuesDP0201DP020006E'] = Acs5ProfilesValuesDP0201DP020006E
    globals()['Acs5ProfilesValuesDP0201DP020006PE'] = Acs5ProfilesValuesDP0201DP020006PE
    globals()['Acs5ProfilesValuesDP0201DP020007E'] = Acs5ProfilesValuesDP0201DP020007E
    globals()['Acs5ProfilesValuesDP0201DP020007PE'] = Acs5ProfilesValuesDP0201DP020007PE
    globals()['Acs5ProfilesValuesDP0201DP020008E'] = Acs5ProfilesValuesDP0201DP020008E
    globals()['Acs5ProfilesValuesDP0201DP020008PE'] = Acs5ProfilesValuesDP0201DP020008PE
    globals()['Acs5ProfilesValuesDP0201DP020009E'] = Acs5ProfilesValuesDP0201DP020009E
    globals()['Acs5ProfilesValuesDP0201DP020009PE'] = Acs5ProfilesValuesDP0201DP020009PE
    globals()['Acs5ProfilesValuesDP0201DP020010E'] = Acs5ProfilesValuesDP0201DP020010E
    globals()['Acs5ProfilesValuesDP0201DP020010PE'] = Acs5ProfilesValuesDP0201DP020010PE
    globals()['Acs5ProfilesValuesDP0201DP020011E'] = Acs5ProfilesValuesDP0201DP020011E
    globals()['Acs5ProfilesValuesDP0201DP020011PE'] = Acs5ProfilesValuesDP0201DP020011PE
    globals()['Acs5ProfilesValuesDP0201DP020014E'] = Acs5ProfilesValuesDP0201DP020014E
    globals()['Acs5ProfilesValuesDP0201DP020014PE'] = Acs5ProfilesValuesDP0201DP020014PE
    globals()['Acs5ProfilesValuesDP0201DP020015E'] = Acs5ProfilesValuesDP0201DP020015E
    globals()['Acs5ProfilesValuesDP0201DP020015PE'] = Acs5ProfilesValuesDP0201DP020015PE
    globals()['Acs5ProfilesValuesDP0201DP020016E'] = Acs5ProfilesValuesDP0201DP020016E
    globals()['Acs5ProfilesValuesDP0201DP020017E'] = Acs5ProfilesValuesDP0201DP020017E


class Acs5ProfilesValuesDP0201(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        lazy_import()
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'mdb_group_name': (str,),  # noqa: E501
            'mdb_group_code': (str,),  # noqa: E501
            'dp020001_e': (Acs5ProfilesValuesDP0201DP020001E,),  # noqa: E501
            'dp020002_e': (Acs5ProfilesValuesDP0201DP020002E,),  # noqa: E501
            'dp020002_pe': (Acs5ProfilesValuesDP0201DP020002PE,),  # noqa: E501
            'dp020003_e': (Acs5ProfilesValuesDP0201DP020003E,),  # noqa: E501
            'dp020003_pe': (Acs5ProfilesValuesDP0201DP020003PE,),  # noqa: E501
            'dp020006_e': (Acs5ProfilesValuesDP0201DP020006E,),  # noqa: E501
            'dp020006_pe': (Acs5ProfilesValuesDP0201DP020006PE,),  # noqa: E501
            'dp020007_e': (Acs5ProfilesValuesDP0201DP020007E,),  # noqa: E501
            'dp020007_pe': (Acs5ProfilesValuesDP0201DP020007PE,),  # noqa: E501
            'dp020008_e': (Acs5ProfilesValuesDP0201DP020008E,),  # noqa: E501
            'dp020008_pe': (Acs5ProfilesValuesDP0201DP020008PE,),  # noqa: E501
            'dp020009_e': (Acs5ProfilesValuesDP0201DP020009E,),  # noqa: E501
            'dp020009_pe': (Acs5ProfilesValuesDP0201DP020009PE,),  # noqa: E501
            'dp020010_e': (Acs5ProfilesValuesDP0201DP020010E,),  # noqa: E501
            'dp020010_pe': (Acs5ProfilesValuesDP0201DP020010PE,),  # noqa: E501
            'dp020011_e': (Acs5ProfilesValuesDP0201DP020011E,),  # noqa: E501
            'dp020011_pe': (Acs5ProfilesValuesDP0201DP020011PE,),  # noqa: E501
            'dp020014_e': (Acs5ProfilesValuesDP0201DP020014E,),  # noqa: E501
            'dp020014_pe': (Acs5ProfilesValuesDP0201DP020014PE,),  # noqa: E501
            'dp020015_e': (Acs5ProfilesValuesDP0201DP020015E,),  # noqa: E501
            'dp020015_pe': (Acs5ProfilesValuesDP0201DP020015PE,),  # noqa: E501
            'dp020016_e': (Acs5ProfilesValuesDP0201DP020016E,),  # noqa: E501
            'dp020017_e': (Acs5ProfilesValuesDP0201DP020017E,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'mdb_group_name': 'MDBGroupName',  # noqa: E501
        'mdb_group_code': 'MDBGroupCode',  # noqa: E501
        'dp020001_e': 'DP020001E',  # noqa: E501
        'dp020002_e': 'DP020002E',  # noqa: E501
        'dp020002_pe': 'DP020002PE',  # noqa: E501
        'dp020003_e': 'DP020003E',  # noqa: E501
        'dp020003_pe': 'DP020003PE',  # noqa: E501
        'dp020006_e': 'DP020006E',  # noqa: E501
        'dp020006_pe': 'DP020006PE',  # noqa: E501
        'dp020007_e': 'DP020007E',  # noqa: E501
        'dp020007_pe': 'DP020007PE',  # noqa: E501
        'dp020008_e': 'DP020008E',  # noqa: E501
        'dp020008_pe': 'DP020008PE',  # noqa: E501
        'dp020009_e': 'DP020009E',  # noqa: E501
        'dp020009_pe': 'DP020009PE',  # noqa: E501
        'dp020010_e': 'DP020010E',  # noqa: E501
        'dp020010_pe': 'DP020010PE',  # noqa: E501
        'dp020011_e': 'DP020011E',  # noqa: E501
        'dp020011_pe': 'DP020011PE',  # noqa: E501
        'dp020014_e': 'DP020014E',  # noqa: E501
        'dp020014_pe': 'DP020014PE',  # noqa: E501
        'dp020015_e': 'DP020015E',  # noqa: E501
        'dp020015_pe': 'DP020015PE',  # noqa: E501
        'dp020016_e': 'DP020016E',  # noqa: E501
        'dp020017_e': 'DP020017E',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, mdb_group_name, mdb_group_code, dp020001_e, dp020002_e, dp020002_pe, dp020003_e, dp020003_pe, dp020006_e, dp020006_pe, dp020007_e, dp020007_pe, dp020008_e, dp020008_pe, dp020009_e, dp020009_pe, dp020010_e, dp020010_pe, dp020011_e, dp020011_pe, dp020014_e, dp020014_pe, dp020015_e, dp020015_pe, dp020016_e, dp020017_e, *args, **kwargs):  # noqa: E501
        """Acs5ProfilesValuesDP0201 - a model defined in OpenAPI

        Args:
            mdb_group_name (str): HOUSEHOLDS BY TYPE
            mdb_group_code (str): DP0201
            dp020001_e (Acs5ProfilesValuesDP0201DP020001E):
            dp020002_e (Acs5ProfilesValuesDP0201DP020002E):
            dp020002_pe (Acs5ProfilesValuesDP0201DP020002PE):
            dp020003_e (Acs5ProfilesValuesDP0201DP020003E):
            dp020003_pe (Acs5ProfilesValuesDP0201DP020003PE):
            dp020006_e (Acs5ProfilesValuesDP0201DP020006E):
            dp020006_pe (Acs5ProfilesValuesDP0201DP020006PE):
            dp020007_e (Acs5ProfilesValuesDP0201DP020007E):
            dp020007_pe (Acs5ProfilesValuesDP0201DP020007PE):
            dp020008_e (Acs5ProfilesValuesDP0201DP020008E):
            dp020008_pe (Acs5ProfilesValuesDP0201DP020008PE):
            dp020009_e (Acs5ProfilesValuesDP0201DP020009E):
            dp020009_pe (Acs5ProfilesValuesDP0201DP020009PE):
            dp020010_e (Acs5ProfilesValuesDP0201DP020010E):
            dp020010_pe (Acs5ProfilesValuesDP0201DP020010PE):
            dp020011_e (Acs5ProfilesValuesDP0201DP020011E):
            dp020011_pe (Acs5ProfilesValuesDP0201DP020011PE):
            dp020014_e (Acs5ProfilesValuesDP0201DP020014E):
            dp020014_pe (Acs5ProfilesValuesDP0201DP020014PE):
            dp020015_e (Acs5ProfilesValuesDP0201DP020015E):
            dp020015_pe (Acs5ProfilesValuesDP0201DP020015PE):
            dp020016_e (Acs5ProfilesValuesDP0201DP020016E):
            dp020017_e (Acs5ProfilesValuesDP0201DP020017E):

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.mdb_group_name = mdb_group_name
        self.mdb_group_code = mdb_group_code
        self.dp020001_e = dp020001_e
        self.dp020002_e = dp020002_e
        self.dp020002_pe = dp020002_pe
        self.dp020003_e = dp020003_e
        self.dp020003_pe = dp020003_pe
        self.dp020006_e = dp020006_e
        self.dp020006_pe = dp020006_pe
        self.dp020007_e = dp020007_e
        self.dp020007_pe = dp020007_pe
        self.dp020008_e = dp020008_e
        self.dp020008_pe = dp020008_pe
        self.dp020009_e = dp020009_e
        self.dp020009_pe = dp020009_pe
        self.dp020010_e = dp020010_e
        self.dp020010_pe = dp020010_pe
        self.dp020011_e = dp020011_e
        self.dp020011_pe = dp020011_pe
        self.dp020014_e = dp020014_e
        self.dp020014_pe = dp020014_pe
        self.dp020015_e = dp020015_e
        self.dp020015_pe = dp020015_pe
        self.dp020016_e = dp020016_e
        self.dp020017_e = dp020017_e
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, mdb_group_name, mdb_group_code, dp020001_e, dp020002_e, dp020002_pe, dp020003_e, dp020003_pe, dp020006_e, dp020006_pe, dp020007_e, dp020007_pe, dp020008_e, dp020008_pe, dp020009_e, dp020009_pe, dp020010_e, dp020010_pe, dp020011_e, dp020011_pe, dp020014_e, dp020014_pe, dp020015_e, dp020015_pe, dp020016_e, dp020017_e, *args, **kwargs):  # noqa: E501
        """Acs5ProfilesValuesDP0201 - a model defined in OpenAPI

        Args:
            mdb_group_name (str): HOUSEHOLDS BY TYPE
            mdb_group_code (str): DP0201
            dp020001_e (Acs5ProfilesValuesDP0201DP020001E):
            dp020002_e (Acs5ProfilesValuesDP0201DP020002E):
            dp020002_pe (Acs5ProfilesValuesDP0201DP020002PE):
            dp020003_e (Acs5ProfilesValuesDP0201DP020003E):
            dp020003_pe (Acs5ProfilesValuesDP0201DP020003PE):
            dp020006_e (Acs5ProfilesValuesDP0201DP020006E):
            dp020006_pe (Acs5ProfilesValuesDP0201DP020006PE):
            dp020007_e (Acs5ProfilesValuesDP0201DP020007E):
            dp020007_pe (Acs5ProfilesValuesDP0201DP020007PE):
            dp020008_e (Acs5ProfilesValuesDP0201DP020008E):
            dp020008_pe (Acs5ProfilesValuesDP0201DP020008PE):
            dp020009_e (Acs5ProfilesValuesDP0201DP020009E):
            dp020009_pe (Acs5ProfilesValuesDP0201DP020009PE):
            dp020010_e (Acs5ProfilesValuesDP0201DP020010E):
            dp020010_pe (Acs5ProfilesValuesDP0201DP020010PE):
            dp020011_e (Acs5ProfilesValuesDP0201DP020011E):
            dp020011_pe (Acs5ProfilesValuesDP0201DP020011PE):
            dp020014_e (Acs5ProfilesValuesDP0201DP020014E):
            dp020014_pe (Acs5ProfilesValuesDP0201DP020014PE):
            dp020015_e (Acs5ProfilesValuesDP0201DP020015E):
            dp020015_pe (Acs5ProfilesValuesDP0201DP020015PE):
            dp020016_e (Acs5ProfilesValuesDP0201DP020016E):
            dp020017_e (Acs5ProfilesValuesDP0201DP020017E):

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.mdb_group_name = mdb_group_name
        self.mdb_group_code = mdb_group_code
        self.dp020001_e = dp020001_e
        self.dp020002_e = dp020002_e
        self.dp020002_pe = dp020002_pe
        self.dp020003_e = dp020003_e
        self.dp020003_pe = dp020003_pe
        self.dp020006_e = dp020006_e
        self.dp020006_pe = dp020006_pe
        self.dp020007_e = dp020007_e
        self.dp020007_pe = dp020007_pe
        self.dp020008_e = dp020008_e
        self.dp020008_pe = dp020008_pe
        self.dp020009_e = dp020009_e
        self.dp020009_pe = dp020009_pe
        self.dp020010_e = dp020010_e
        self.dp020010_pe = dp020010_pe
        self.dp020011_e = dp020011_e
        self.dp020011_pe = dp020011_pe
        self.dp020014_e = dp020014_e
        self.dp020014_pe = dp020014_pe
        self.dp020015_e = dp020015_e
        self.dp020015_pe = dp020015_pe
        self.dp020016_e = dp020016_e
        self.dp020017_e = dp020017_e
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
